name: analyze-wishlist

on:
  # schedule:
  #   - cron: 0 4 * * * # 4:00 UTC everyday
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ref: main

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # This only caches downloaded packages, not installed packages
          # cache: pip

      - name: get site-packages path
        id: site_packages
        run: echo "site_dir=$(python -c 'import site; print(site.getsitepackages()[0])')" > "$GITHUB_OUTPUT"

      - name: cache installed packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.site_packages.outputs.site_dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: execute py script
        run: python -m swc -i=${{ secrets.STEAMUID }} -d=True

      - name: check changes
        id: check_changes
        run: if [[ $(git diff --name-only HEAD) == *"output/successful.txt"* ]]; then echo "changes=true" > "$GITHUB_OUTPUT"; else echo "changes=false" > "$GITHUB_OUTPUT"; fi

      - name: commit files
        # TODO: find an elegant solution
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "ics: update release calendar" -a

      - name: push changes
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: stash png outputs
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          git add -f output/*.png
          git stash

      - name: checkout output branch
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        uses: actions/checkout@v4
        with:
          ref: output

      - name: get png outputs from stash
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          set -e
          git stash apply || true
          git checkout --theirs -- output/*.png
          git stash drop

      - name: commit plots
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit --amend --no-edit

      - name: push plots to output branch
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: output
          force: True
